apiVersion: v1
kind: ConfigMap
metadata:
  name: alert-pod-rule-cm
  namespace: monitoring
data:
  alert.rules: |
    ALERT KubeSystemPodCPUUsageHigh
      IF sum(rate(container_cpu_usage_seconds_total{namespace="kube-system",pod_name=~"kube-.*",image!="",name=~"^k8s_.*"}[1m])) by(pod_name) > 1
      FOR 3m
      LABELS { severity = "error" }
      ANNOTATIONS {
        summary = "k8s pod cpu high",
        description = "{{ $labels.pod_name }} cpu high, value: {{ $value }}"
      }


    ALERT KubeSystemPodMemUsageHigh
      IF container_memory_usage_bytes{namespace="kube-system",pod_name=~"kube-.*",image!="",name=~"^k8s_.*"} > 1073741824
      FOR 3m
      LABELS { severity = "error" }
      ANNOTATIONS {
        summary = "k8s pod mem high",
        description = "{{ $labels.pod_name }} mem high, value: {{ $value }}"
      }


    ALERT KubeSystemPodStatusError
      IF sum(kube_pod_status_phase{namespace="kube-system",phase=~"Pending|Failed|Unknown|Terminating",pod!~".*test.*"}) by (pod,namespace,phase) != 0
      FOR 10m
      LABELs { severity = "error" }
      ANNOTATIONS {
        summary = "kube-system pod status error ",
        description = "{{ $labels.namespace }} {{ $labels.pod }} status {{ $labels.phase }}"
      }

    ALERT PodTerminatingError
      IF sum(kube_pod_status_phase{phase="Terminating"}) by (pod,namespace) != 0
      FOR 30m
      LABELs { severity = "warning" }
      ANNOTATIONS {
        summary = "pod terminating error ",
        description = "{{ $labels.namespace }} {{ $labels.pod }} stuck in {{ $labels.phase }} status"
      }


    ALERT KubeSystemPodContainerRestart
      IF rate(kube_pod_container_status_restarts{namespace="kube-system",container=~"^kube-.*|calico-node|etcd"}[1m]) > 0
      LABELs { severity = "error" }
      ANNOTATIONS {
        summary = "k8s main component restart ",
        description = "{{ $labels.pod }} {{ $labels.container }} restart "
      }

    ALERT KubeSystemPodContainerRestart
      IF rate(kube_pod_container_status_restarts{namespace="kube-system",container=~"alertmanager|grafana|prometheus|kubernetes-dashboard|nginx-ingress-controller"}[1m]) > 0
      LABELs { severity = "warning" }
      ANNOTATIONS {
        summary = "ke common component restart ",
        description = "{{ $labels.pod }} {{ $labels.container }} restart "
      }


    ALERT KubeSystemPodContainerRestart
      IF rate(kube_pod_container_status_restarts{namespace="kube-system",container!~".*test.*|^kube-.*|calico-node|etcd|alertmanager|grafana|prometheus|kubernetes-dashboard|nginx-ingress-controller"}[1m]) > 0
      LABELs { severity = "notice" }
      ANNOTATIONS {
        summary = "ke common component restart ",
        description = "{{ $labels.pod }} {{ $labels.container }} restart "
      }


    ALERT KubeSystemPodContainerNotRunning
      IF kube_pod_container_status_running{namespace="kube-system",container=~"^kube-.*|calico-node|etcd"} != 1
      LABELs { severity = "critical" }
      ANNOTATIONS {
        summary = "k8s main component not running ",
        description = "{{ $labels.pod }} {{ $labels.container }} not running "
      }


    ALERT KubeSystemPodContainerNotRunning
      IF kube_pod_container_status_running{namespace="kube-system",container=~"alertmanager|grafana|prometheus|kubernetes-dashboard|nginx-ingress-controller"} != 1
      LABELs { severity = "error" }
      ANNOTATIONS {
        summary = "ke common component not running ",
        description = "{{ $labels.pod }} {{ $labels.container }} not running "
      }

    ALERT KubeSystemPodContainerNotRunning
      IF kube_pod_container_status_running{namespace="kube-system",container!~".*test.*|^kube-.*|calico-node|etcd|alertmanager|grafana|prometheus|kubernetes-dashboard|nginx-ingress-controller"} != 1
      LABELs { severity = "warning" }
      ANNOTATIONS {
        summary = "ke common component not running ",
        description = "{{ $labels.pod }} {{ $labels.container }} not running "
      }
